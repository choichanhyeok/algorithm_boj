## 문제 ##
# 캥거루 세 마리가 사막에서 놀고 있다. 사막에는 수직선이 하나 있고, 캥거루는 서로 다른 한 좌표 위에 있다.
# 한 번 움직일 때, 바깥쪽의 두 캥거루 중 한 마리가 다른 두 캥거루 사이의 정수 좌표로 점프한다.
# 한 좌표 위에 있는 캥거루가 두 마리 이상일 수는 없다.
# 캥거루는 최대 몇 번 움직일 수 있을까?




# 완전 탐색의 경우 #
# 조건 1: target 좌표를 A라고 하고 나머지 두 캥거루의 좌표를 B, C라고 할 때,
#        A는 B와 C 사이로만 점프할 수 있다.
# 종료 조건: 따라서 B와 C 사이의 값이 없을 때. 즉, B와 C가 연속된 수일 때 A의 점프는 종료된다.
#   이 조건으로 세 캥거루의 종료 조건을 찾으면 된다.


# 그리디 방식의 경우 #
# A, B, C 사이에 점프하는데, 제일 오래 점프를 하려면 더 넓은 쪽으로 점프를 하면 된다.
# 더 넓은 쪽 중에서도 가장 앞, 뒤에 붙으면 되는데. 이렇게 야금야금 한칸씩 나아갈 수 있다.
# 넓은 쪽의 범위가 b와 c 사이라면 (c-b)-1이 가장 오래 뛸 수 있는 공식이다.



while True:
    try:
        a, b, c = map(int, input().split())
        print(max(b-a-1, c-b-1))
    except:
        break

