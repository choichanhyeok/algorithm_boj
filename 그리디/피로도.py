# 하루에 한 시간 단위로 일을 하거나 일을 쉬어도 된다. 하루에 한 시간 일하면 피로도는 $A$ 만큼 쌓이고 일은 $B$ 만큼 처리할 수 있다.
# 만약에 한 시간을 쉰다면 피로도는 $C$ 만큼 줄어든다. 단, 피로도가 음수로 내려가면 0으로 바뀐다. 당연히 일을 하지 않고 쉬었기 때문에 처리한 일은 없다.
# 피로도를 최대한 $M$ 을 넘지 않게 일을 하려고 한다. $M$ 를 넘기면 일하는데 번아웃이 와서 이미 했던 일들도 다 던져버리고 일을 그만두게 된다.
# 번아웃이 되지 않도록 일을 할때 하루에 최대 얼마나 일을 할 수 있는지 구해보자. 하루는 24시간이다.


# A: 시간당 피로도 쌓이는 정도
# B: 시간당 일하는 정도
# C: 시간당 휴식시 피로도 회복 정도
# M: 피로도 한계치

# 가장 많이 일할 수 있는 정도를 찾으시오 (최대 B값)
# 단, 피로도가 음수로 내려가면 0

# 분석 #
# B와 함께 A 값이 같이 증가하는데, M을 통해 한계치 초과시 C호출 작업 필요
# 사용 변수: work(작업량), stress(피로도)

#input: A, B, C, M
#output: 최대 work(작업량)


A, B, C, M = map(int, input().split())
stress = 0
work = 0

for i in range(24):
    if stress < 0:
        stress = 0
    if stress+A > M:
        stress -= C
    else:
        stress += A
        work += B
print(work)
